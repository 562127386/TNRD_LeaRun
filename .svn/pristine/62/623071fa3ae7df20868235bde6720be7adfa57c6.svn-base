using Dapper;
using Learun.DataBase.Repository;
using Learun.Util;
using System;
using System.Collections.Generic;
using System.Data;
using System.Text;

namespace Wizsen_TNRD_EnergyProject.Wizsen_TNRD_Project
{
    /// <summary>
    /// 版 本 Learun-ADMS V7.0.0 力软敏捷开发框架
    /// Copyright (c) 2013-2018 上海力软信息技术有限公司
    /// 创 建：超级管理员
    /// 日 期：2019-02-27 17:00
    /// 描 述：资金下达
    /// </summary>
    public class ProjectCapitalService : RepositoryFactory
    {
        #region 构造函数和属性

        private string fieldSql;
        public ProjectCapitalService()
        {
            fieldSql= @"
                t.Id,
                t.BindId,
                t.Code,
                t.Name,
                t.IssuedYear,
                t.BureauDate,
                t.BureauTitanict,
                t.BureauFunds,
                t.FiscalDate,
                t.FiscalTitanict,
                t.FiscalFunds,
                t.IsComplete,
                t.CreateDate, 
                t.CreateUserId, 
                t.CreateUserName, 
                t.UpdateDate, 
                t.UpdateUserId, 
                t.UpdateUserName
            ";
        }
        #endregion

        #region 获取数据

        /// <summary>
        /// 获取列表数据
        /// <summary>
        /// <returns></returns>
        public IEnumerable<TNRD_Project_CapitalEntity> GetList( string queryJson )
        {
            try
            {
                //参考写法
                //var queryParam = queryJson.ToJObject();
                // 虚拟参数
                //var dp = new DynamicParameters(new { });
                //dp.Add("startTime", queryParam["StartTime"].ToDate(), DbType.DateTime);
                var strSql = new StringBuilder();
                strSql.Append("SELECT ");
                strSql.Append(fieldSql);
                strSql.Append(" FROM TNRD_Project_Capital t ");
                return this.BaseRepository().FindList<TNRD_Project_CapitalEntity>(strSql.ToString());
            }
            catch (Exception ex)
            {
                if (ex is ExceptionEx)
                {
                    throw;
                }
                else
                {
                    throw ExceptionEx.ThrowServiceException(ex);
                }
            }
        }

        /// <summary>
        /// 获取列表分页数据
        /// <param name="pagination">分页参数</param>
        /// <summary>
        /// <returns></returns>
        public IEnumerable<TNRD_Project_CapitalEntity> GetPageList(Pagination pagination, string queryJson)
        {
            try
            {
                var strSql = new StringBuilder();
                strSql.Append("SELECT ");
                strSql.Append(fieldSql);
                strSql.Append(" FROM TNRD_Project_Capital t ");
                strSql.Append("  WHERE 1=1 ");
                var queryParam = queryJson.ToJObject();
                // 虚拟参数 
                var dp = new DynamicParameters(new { });
                if (!queryParam["B_StartTime"].IsEmpty() && !queryParam["B_EndTime"].IsEmpty())
                {
                    dp.Add("B_startTime", queryParam["B_StartTime"].ToDate(), DbType.DateTime);
                    dp.Add("B_endTime", queryParam["B_EndTime"].ToDate(), DbType.DateTime);
                    strSql.Append(" AND ( t.Date >= @B_startTime AND t.Date <= @B_endTime ) ");
                }
                if (!queryParam["F_StartTime"].IsEmpty() && !queryParam["F_EndTime"].IsEmpty())
                {
                    dp.Add("F_startTime", queryParam["F_StartTime"].ToDate(), DbType.DateTime);
                    dp.Add("F_endTime", queryParam["F_EndTime"].ToDate(), DbType.DateTime);
                    strSql.Append(" AND ( t.Date >= @F_startTime AND t.Date <= @F_endTime ) ");
                }
                if (!queryParam["IssuedYear"].IsEmpty())
                {
                    dp.Add("IssuedYear", "%" + queryParam["IssuedYear"].ToString() + "%", DbType.String);
                    strSql.Append(" AND t.IssuedYear Like @IssuedYear ");
                }
                if (!queryParam["Name"].IsEmpty())
                {
                    dp.Add("Name", "%" + queryParam["Name"].ToString() + "%", DbType.String);
                    strSql.Append(" AND t.Name Like @Name ");
                }
                return this.BaseRepository().FindList<TNRD_Project_CapitalEntity>(strSql.ToString(),dp, pagination);
            }
            catch (Exception ex)
            {
                if (ex is ExceptionEx)
                {
                    throw;
                }
                else
                {
                    throw ExceptionEx.ThrowServiceException(ex);
                }
            }
        }

        /// <summary>
        /// 获取实体数据
        /// <param name="keyValue">主键</param>
        /// <summary>
        /// <returns></returns>
        public TNRD_Project_CapitalEntity GetEntity(string keyValue)
        {
            try
            {
                return this.BaseRepository().FindEntity<TNRD_Project_CapitalEntity>(keyValue);
            }
            catch (Exception ex)
            {
                if (ex is ExceptionEx)
                {
                    throw;
                }
                else
                {
                    throw ExceptionEx.ThrowServiceException(ex);
                }
            }
        }

        #endregion

        #region 提交数据

        /// <summary>
        /// 删除实体数据
        /// <param name="keyValue">主键</param>
        /// <summary>
        /// <returns></returns>
        public void DeleteEntity(string keyValue)
        {
            try
            {
                this.BaseRepository().Delete<TNRD_Project_CapitalEntity>(t=>t.Id == keyValue);
            }
            catch (Exception ex)
            {
                if (ex is ExceptionEx)
                {
                    throw;
                }
                else
                {
                    throw ExceptionEx.ThrowServiceException(ex);
                }
            }
        }

        /// <summary>
        /// 保存实体数据（新增、修改）
        /// <param name="keyValue">主键</param>
        /// <summary>
        /// <returns></returns>
        public void SaveEntity(string keyValue, TNRD_Project_CapitalEntity entity)
        {
            try
            {
                if (!string.IsNullOrEmpty(keyValue))
                {
                    entity.Modify(keyValue);
                    this.BaseRepository().Update(entity);
                }
                else
                {
                    entity.Create();
                    this.BaseRepository().Insert(entity);
                }
            }
            catch (Exception ex)
            {
                if (ex is ExceptionEx)
                {
                    throw;
                }
                else
                {
                    throw ExceptionEx.ThrowServiceException(ex);
                }
            }
        }

        #endregion

    }
}
